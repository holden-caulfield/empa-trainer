{"version":3,"sources":["lib/progressionSets.js","lib/music.js","lib/player.js","Redux/Intervals/index.js","Redux/Progressions/index.js","Redux/Panels/index.js","Redux/index.js","registerServiceWorker.js","Components/Panels.js","Pages/About/index.js","lib/colors.js","Components/Button.js","Components/Picker.js","Components/CheckableOption.js","Components/NotePicker.js","Components/IntervalRangePicker.js","Pages/Intervals/Config.js","Components/IntervalPicker.js","Components/Notes.js","lib/images.js","Components/Interval.js","Pages/Intervals/Test.js","Theme/index.js","Theme/colors.js","Pages/Intervals/Progress.js","Pages/Intervals/index.js","Components/RangePicker.js","Components/ConfigSection.js","Pages/Progressions/Config.js","Pages/Progressions/Test.js","Pages/index.js","Pages/Progressions/index.js","Layouts/MainLayout/NavMenu.js","Layouts/MainLayout/NavBar.js","Layouts/MainLayout/index.js","App.js","Config/Reactotron.js","index.js"],"names":["Maj","Tri","Min","DS","IM","Dis","ST","randomPick","list","shuffle","randomNote","range","chromatic","Math","random","intervalSets","liftInterval","intervalDesc","interval","ivlQuality","ivl","abs","num","q","ivlDirection","dir","expandIntervalSets","sets","ascDes","chain","set","map","intervalOptions","Object","keys","randomInterval","rootNote","excluding","intervalFrom","without","note","name","noteFrom","noteTo","transpose","notesMap","A","B","C","D","E","F","G","toItalian","noteName","noteObj","letter","acc","randomProgression","types","includedSets","includedTypes","randomRootNote","chords","type","progressionSets","progressionOptions","chordNotes","chordName","fromNote","chordObj","chord","realTonic","pc","refNote","octave","find","distance","closestNote","tonic","intervals","extraRomanMap","SustV","applyExtraRomans","roman","includes","expandChordProgression","progression","split","fromRomanNumerals","applyProgression","reduce","progressionChords","previousTonic","isEmpty","head","last","ac","window","AudioContext","webkitAudioContext","CONFIG_PRESETS","PRACTICA","intervalRange","repeatIntervals","drillLength","PABLO","INITIAL_STATE","config","answer","ready","historic","createActions","setConfig","setPreset","start","replay","stop","Types","Creators","reducer","createReducer","START","state","drillIsOver","allowsNoRepeat","path","ANSWER","append","READY","STOP","SET_CONFIG","newConfig","SET_PRESET","preset","Logics","createLogic","REPLAY","latest","processOptions","dispatchReturn","successType","process","currentState","getState","Soundfont","instrument","then","piano","play","currentTime","duration","length","expandSelectedIntervals","progressStats","answerOk","stats","total","correct","filter","byGroup","groupBy","setOf","accum","value","equals","omit","showAnswer","setProgConfig","progStart","progReplay","playRoot","showProgAnswer","progReady","progStop","SET_PROG_CONFIG","PROG_START","PROG_STOP","SHOW_PROG_ANSWER","PROG_READY","PROG_REPLAY","progressions","forEach","i","when","PLAY_ROOT","left","right","openLeft","openRight","clear","OPEN_LEFT","OPEN_RIGHT","CLEAR","logicMiddleware","createLogicMiddleware","intervalsLogics","progressionsLogics","rootReducer","combineReducers","panels","middlewares","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","styled","div","TextContainer","About","render","href","Component","getColor","props","color","theme","colors","themeColor","colorProp","defaultColor","propName","colorIfTrue","colorIfFalse","BaseButton","button","attrs","disabled","Button","extend","LightButton","SecondaryButton","textColor","withCheckable","css","selected","chroma","luminance","soft","predicate","themeColorIf","CheckableButton","PickerButton","ButtonBar","ButtonPanel","IntervalPicker","this","onSelect","options","isSelected","option","key","onClick","CheckableOption","notes","NotesSelect","select","NotePicker","changeNote","change","oct","onChange","e","target","index","defaultProps","onSelectRange","intervalSet","clickHandler","sortBy","identity","SectionContainer","SectionControls","SectionButton","ModeSection","ModeLabel","span","ConfigSection","title","children","IntervalsConfig","startTest","history","push","url","presetOption","toLowerCase","Si","No","mapDispatchToProps","IntervalsActions","connect","IntervalPickerContainer","IntervalsContainer","DirectionContainer","IntervalPickerButton","directions","icon","quality","setQuality","setState","setDirection","stateComplete","none","isNil","values","colorFor","fn","onIntervalSelected","possibleIntervals","direction","staveNoteFor","noteProps","StaveNote","VF","clef","addModifier","Annotation","addAccidental","Accidental","Notes","drawNote","context","renderer","getContext","group","svg","removeChild","openGroup","Formatter","FormatAndDraw","stave","closeGroup","ref","Renderer","refs","container","Backends","SVG","resize","setFont","setBackgroundFillStyle","Stave","addClef","setContext","draw","imagePath","IntervalContainer","ReplayButton","Interval","ControlsContainer","IntervalsTest","replace","nextInterval","sendAnswer","Redirect","to","dark","light","accent","fade","wrong","average","ProgressContainer","ProgressSection","section","OverallProgressSection","StatsLabel","p","PercentLabel","colorScale","scale","T","StyledLabel","toFixed","IntervalsProgress","percentage","setsWithStats","setName","hasOwnProperty","Intervals","Switch","Route","component","Test","Config","Info","RangePicker","ProgressionsActions","Answer","h1","nextProgression","requestAnswer","route","infoSection","IntervalsInfo","infoIcon","NavContainer","nav","NavHeader","header","Logo","img","NavItem","NavLink","Menu","src","alt","Pages","page","activeClassName","NavBarContainer","TitleContainer","Filler","MenuIcon","Icon","LeftIcon","RightIcon","NavBar","onLeftIcon","onRightIcon","rightIcon","className","MainLayout","id","role","mainContent","withRouter","PanelsActions","renderPage","App","basename","exact","Reactotron","configure","use","reactotronRedux","store","createStore","compose","applyMiddleware","createEnhancer","ReactDOM","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a2ae51e7.chunk.js","sourcesContent":["export default {\n  Maj: {\n    Tri: [\n      'I, IV, V, I',\n      'I, IV, V7, I',\n      'IV, V, I, V',\n      'I, V, IV, V',\n      'I, IIm, V7, I',\n      'I, VIm, II, V7',\n      'VIm, II, V7, I',\n      'I, IV, V, IV',\n      'I, V, I, IV',\n      'I, V7, I, V7',\n      'IV, V, VIm, V',\n      'IV, VIIo, IIIm, VIm',\n      'I, IV, VIm, V7',\n      'I, IV, IV, I',\n      'I, V, IVm, IV',\n      'V, IV, I, V'\n    ],\n    '7ma': [\n      'IMaj7, IVMaj7, V7, IMaj7',\n      'IMaj7, V7, IVMaj7, V7',\n      'IMaj7, IIm7, V7, IMaj7',\n      'IMaj7, V7, IMaj7, IVMaj7',\n      'IMaj7, VIm7, IIm7, V7',\n      'VIm7, IIm7, V7, IMaj7',\n      'IVMaj7, VIIm7b5, IIIm7, VIm7',\n      'IMaj7, IVMaj7, VIm7, V7',\n      'IMaj7, IVMaj7, IVMaj7, IMaj7',\n      'V7, IVMaj7, IMaj7, V7'\n    ]\n  },\n  Min: {\n    Tri: [\n      'Im, IIo, V7, Im',\n      'Im, IVm, V, Im',\n      'Im, IVm, Vm, Im',\n      'Im, bVII, bVI, V',\n      'Im, bIII, bVII, Im',\n      'Im, bIII, bVI, V',\n      'Im, V, Im, V',\n      'IVm, bVII, bIII, VIb',\n      'IIo, V7, Im, V/IV'\n    ],\n    '7ma': [\n      'Im7, IIm7b5, V7, Im7',\n      'Im7, IVm7, V7, Im7',\n      'Im7, IVm7, Vm7, Im7',\n      'Im7, V7, Im7, V7',\n      'IIm7b5, V7, I7m, V/IV'\n    ]\n  },\n  DS: {\n    Tri: [\n      'I, V/IV, IV, I',\n      'II, V/V, V7, I',\n      'IIIm, V/VI, VIm, I',\n      'VIm, V/II, IIm, V7',\n      'VIIo, V/III, IIIm, I'\n    ],\n    '7ma': [\n      'IMaj7, V/IV, IVMaj7, IMaj7',\n      'IIm7, V/V, V7, IMaj7',\n      'IIIm7, V/VI, VIm7, I',\n      'VIm7, V/II, IIm7, V7',\n      'VIIm7b5, V/III, IIIm7, IMaj7'\n    ]\n  },\n  IM: {\n    Tri: [\n      'I, IIo, V7, I',\n      'I, IV, IVm, I',\n      'I, bVI, I, bVI',\n      'I, bVII, IV, I',\n      'I, bIII, IV, I'\n    ],\n    '7ma': ['IMaj7, IIm7b5, V7, IMaj7', 'IMaj7, IVMaj7, IVm7, IMaj7']\n  },\n  Dis: {\n    Tri: [\n      'I, #Io7, IIm, I',\n      'IIm, #IIo7, IIIm, I',\n      'IIIm, bIIIo7, IIm, I',\n      'I, bIIIo7, IIm, I',\n      'V7, #Vo7, VIm, I'\n    ],\n    '7ma': [\n      'IMaj7, #Io7, IIm7, IMaj7',\n      'IIm7, #IIo7, IIIm7, IMaj7',\n      'IIIm7, bIIIo7, IIm7, IMaj7',\n      'IMaj7, bIIIo7, IIm7, IMaj7',\n      'V7, #Vo7, VIm7, IMaj7'\n    ]\n  },\n  ST: {\n    Tri: [\n      'I, IIm, SustV, I',\n      'I, SustV/IV, IV, I',\n      'II, SustV/V, V7, I',\n      'IIIm, SustV/VI, VIm, I',\n      'VIm, SustV/II, IIm, V7',\n      'VIIo, SustV/III, IIIm, I'\n    ],\n    '7ma': [\n      'IMaj7, IIm7, SustV, IMaj7',\n      'IMaj7, SustV/IV, IVMaj7, IMaj7',\n      'IIm7, SustV/V, V7, IMaj7',\n      'IIIm7, SustV/VI, VIm7, I',\n      'VIm7, SustV/II, IIm7, V7',\n      'VIIm7b5, SustV/III, IIIm7, IMaj7'\n    ]\n  }\n}\n","import { chromatic } from '@tonaljs/range'\nimport { shuffle } from '@tonaljs/array'\nimport { note, transpose, interval, distance } from '@tonaljs/tonal'\nimport { chord } from '@tonaljs/chord'\nimport { fromRomanNumerals } from '@tonaljs/progression'\nimport { chain, without, head, last, isEmpty } from 'ramda'\nimport progressionSets from './progressionSets'\n\nconst randomPick = list => shuffle(list)[0]\n\nexport const randomNote = (range = ['C4', 'B5']) =>\n  randomPick(chromatic(range, Math.random() > 0.5))\n\nconst intervalSets = {\n  '2da': ['2m', '2M'],\n  '3ra': ['3m', '3M'],\n  '4/5': ['4P', '4A', '5P'],\n  '6ta': ['6m', '6M'],\n  '7ma': ['7m', '7M'],\n  '8va': ['8P']\n}\n\nconst liftInterval = intervalDesc =>\n  typeof intervalDesc === 'string' ? interval(intervalDesc) : intervalDesc\n\nexport const ivlQuality = interval => {\n  const ivl = liftInterval(interval)\n  return `${Math.abs(ivl.num)}${ivl.q}`\n}\n\nexport const ivlDirection = interval => liftInterval(interval).dir\n\nexport const expandIntervalSets = (sets, ascDes = true) =>\n  chain(\n    set => [\n      ...intervalSets[set],\n      ...(ascDes ? intervalSets[set].map(interval => `-${interval}`) : [])\n    ],\n    sets\n  )\n\nexport const intervalOptions = Object.keys(intervalSets)\n\nexport const setOf = interval =>\n  intervalOptions.find(name =>\n    intervalSets[name].includes(ivlQuality(interval))\n  )\n\nexport const randomInterval = ({\n  sets = intervalOptions,\n  rootNote = false,\n  excluding = []\n}) =>\n  intervalFrom(\n    rootNote ? rootNote : randomNote(),\n    randomPick(without(excluding, expandIntervalSets(sets)))\n  )\n\nexport const intervalFrom = (note, name) => ({\n  noteFrom: note,\n  name: name,\n  noteTo: transpose(note, name)\n})\n\nconst notesMap = {\n  A: 'La',\n  B: 'Si',\n  C: 'Do',\n  D: 'Re',\n  E: 'Mi',\n  F: 'Fa',\n  G: 'Sol'\n}\n\nexport const toItalian = noteName => {\n  const noteObj = note(noteName)\n  return `${notesMap[noteObj.letter]}${noteObj.acc}`\n}\n\nexport const expandProgressionSets = (sets, types) =>\n  chain(set => chain(type => progressionSets[set][type], types), sets)\n\nexport const randomProgression = ({\n  includedSets,\n  includedTypes,\n  randomRootNote,\n  rootNote = false\n}) => ({\n  rootNote: randomRootNote ? randomNote(['A3', 'G4']) : rootNote,\n  chords: randomPick(expandProgressionSets(includedSets, includedTypes))\n})\n\nexport const progressionOptions = Object.keys(progressionSets)\n\nconst closestNote = (pc, refNote, rootNote) => {\n  if (pc === note(rootNote).pc) return rootNote\n  return [3, 4, 5]\n    .map(octave => `${pc}${octave}`)\n    .find(note => interval(distance(note, refNote)).num < 5)\n}\n\nexport const chordNotes = (chordName, fromNote, rootNote) => {\n  const chordObj = chord(chordName)\n  const realTonic = closestNote(chordObj.tonic, fromNote, rootNote)\n  return chordObj.intervals.map(interval => transpose(realTonic, interval))\n}\n\nconst extraRomanMap = {\n  'V/IV': 'I7',\n  'V/V': 'II7',\n  'V/VI': 'III7',\n  'V/II': 'VI7',\n  'V/III': 'VII7',\n  SustV: 'IIb7',\n  'SustV/IV': 'Vb7',\n  'SustV/V': 'VIb7',\n  'SustV/VI': 'VIb7',\n  'SustV/II': 'IIIb7',\n  'SustV/III': 'VI7'\n}\n\nconst applyExtraRomans = roman =>\n  Object.keys(extraRomanMap).includes(roman) ? extraRomanMap[roman] : roman\n\nexport const applyProgression = (rootNote, progression) => {\n  const chords = progression.split(', ').map(applyExtraRomans)\n  return fromRomanNumerals(note(rootNote).pc, chords)\n}\n\nexport const expandChordProgression = ({ rootNote, chords }) => {\n  return applyProgression(rootNote, chords).reduce(\n    (progressionChords, chord) => {\n      const previousTonic = isEmpty(progressionChords)\n        ? rootNote\n        : head(last(progressionChords))\n      return [...progressionChords, chordNotes(chord, previousTonic, rootNote)]\n    },\n    []\n  )\n}\n","import Soundfont from 'soundfont-player'\n\nconst AudioContext =\n  window.AudioContext || // Default\n  window.webkitAudioContext || // Safari and old versions of Chrome\n  false\n\nconst ac = new AudioContext()\n\nexport const playInterval = interval => {\n  Soundfont.instrument(ac, 'acoustic_grand_piano').then(piano => {\n    piano.play(interval.noteFrom, ac.currentTime, { duration: 1 })\n    piano.play(interval.noteTo, ac.currentTime + 1, { duration: 1 })\n  })\n}\n\nexport const playChord = (instrument, when, notes) => {\n  notes.forEach(note => {\n    instrument.play(note, when, { duration: 2 })\n  })\n}\n\nexport const playProgression = chords => {\n  Soundfont.instrument(ac, 'acoustic_grand_piano').then(piano => {\n    chords.forEach((chord, i) => {\n      playChord(piano, ac.currentTime + i * 3, chord)\n    })\n  })\n}\n\nexport const playNote = note => {\n  Soundfont.instrument(ac, 'acoustic_grand_piano').then(piano => {\n    piano.play(note, ac.currentTime, { duration: 2 })\n  })\n}\n","import { createReducer, createActions } from 'reduxsauce'\nimport { createLogic } from 'redux-logic'\n\nimport {\n  randomInterval,\n  randomNote,\n  intervalOptions,\n  expandIntervalSets,\n  setOf\n} from 'lib/music'\nimport { playInterval } from 'lib/player'\nimport { append, filter, groupBy, map, path, omit, equals } from 'ramda'\n\nconst CONFIG_PRESETS = {\n  PRACTICA: () => ({\n    intervalRange: intervalOptions,\n    repeatIntervals: true,\n    rootNote: 'C4',\n    randomRootNote: true,\n    drillLength: false\n  }),\n  PABLO: () => ({\n    intervalRange: intervalOptions,\n    repeatIntervals: false,\n    rootNote: randomNote(['C4', 'B4']),\n    randomRootNote: false,\n    drillLength: 10\n  })\n}\n\n/* ------------- Initial State ------------- */\n\nconst INITIAL_STATE = {\n  config: {\n    intervalRange: intervalOptions,\n    repeatIntervals: true,\n    rootNote: 'C4',\n    randomRootNote: true,\n    drillLength: false\n  },\n  interval: null,\n  answer: null,\n  ready: false,\n  historic: []\n}\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  setConfig: ['newConfig'],\n  setPreset: ['preset'],\n  start: null,\n  ready: null,\n  replay: null,\n  answer: ['answer'],\n  stop: null\n})\n\nexport default Creators\n\n/* ------------- Reducers ------------- */\nconst setConfig = (state, { newConfig }) => ({\n  ...state,\n  config: { ...state.config, ...newConfig }\n})\n\nconst start = state => {\n  if (drillIsOver(state)) return state\n  const {\n    randomRootNote,\n    intervalRange,\n    rootNote,\n    repeatIntervals\n  } = state.config\n  return {\n    ...state,\n    ready: false,\n    answer: null,\n    interval: randomInterval({\n      sets: intervalRange,\n      rootNote: randomRootNote ? false : rootNote,\n      excluding:\n        repeatIntervals || !allowsNoRepeat(state)\n          ? []\n          : map(path(['interval', 'name']), state.historic)\n    })\n  }\n}\n\nconst answer = (state, { answer }) => ({\n  ...state,\n  answer,\n  historic: append({ interval: state.interval, answer: answer }, state.historic)\n})\n\nconst ready = state => ({ ...state, ready: true })\n\nconst stop = state => ({\n  ...INITIAL_STATE,\n  config: state.config\n})\n\nconst setPreset = (state, { preset }) => ({\n  ...state,\n  config: CONFIG_PRESETS[preset]()\n})\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.START]: start,\n  [Types.ANSWER]: answer,\n  [Types.READY]: ready,\n  [Types.STOP]: stop,\n  [Types.SET_CONFIG]: setConfig,\n  [Types.SET_PRESET]: setPreset\n})\n\n/* ------------- Logics ------------- */\n\nconst playbackLogic = createLogic({\n  type: [Types.START, Types.REPLAY],\n  latest: true,\n  processOptions: {\n    dispatchReturn: true,\n    successType: Creators.ready\n  },\n  process: ({ getState }) => {\n    const currentState = getState().intervals\n    !drillIsOver(currentState) && playInterval(currentState.interval)\n    return\n  }\n})\n\nexport const Logics = [playbackLogic]\n\n/* ------------- Selectors ------------- */\nexport const drillIsOver = ({ historic, config }) =>\n  config.drillLength && historic.length >= config.drillLength\n\nexport const allowsNoRepeat = state => {\n  const { intervalRange, drillLength } = state.config\n  if (drillLength === false) return false\n  return drillLength <= expandIntervalSets(intervalRange).length\n}\n\nexport const expandSelectedIntervals = state =>\n  expandIntervalSets(state.config.intervalRange, false)\n\nexport const progressStats = state => {\n  const { historic } = state.intervals\n  const answerOk = ({ interval, answer }) => answer === interval.name\n  const intervalSet = ({ interval }) => setOf(interval.name)\n  const stats = intervals => ({\n    total: intervals.length,\n    correct: filter(answerOk, intervals).length\n  })\n  return {\n    ...stats(historic),\n    byGroup: map(stats, groupBy(intervalSet, historic))\n  }\n}\n\nexport const preset = state => {\n  const checkPreset = (accum, value) =>\n    equals(\n      omit(['rootNote'], state.config),\n      omit(['rootNote'], CONFIG_PRESETS[value]())\n    )\n      ? value\n      : accum\n  return Object.keys(CONFIG_PRESETS).reduce(checkPreset, null)\n}\n","import { createReducer, createActions } from 'reduxsauce'\nimport { createLogic } from 'redux-logic'\nimport {\n  progressionOptions,\n  randomProgression,\n  expandChordProgression\n} from 'lib/music'\nimport { playProgression, playNote } from 'lib/player'\n\n/* ------------- Initial State ------------- */\n\nconst INITIAL_STATE = {\n  config: {\n    includedSets: progressionOptions,\n    includedTypes: ['Tri', '7ma'],\n    rootNote: 'C4',\n    randomRootNote: true\n  },\n  progression: null,\n  showAnswer: false\n}\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  setProgConfig: ['newConfig'],\n  progStart: null,\n  progReplay: null,\n  playRoot: null,\n  showProgAnswer: null,\n  progReady: null,\n  progStop: null\n})\n\nexport default Creators\n\n/* ------------- Reducers ------------- */\nconst setConfig = (state, { newConfig }) => ({\n  ...state,\n  config: { ...state.config, ...newConfig }\n})\n\nconst start = state => ({\n  ...state,\n  progression: randomProgression(state.config),\n  showAnswer: false\n})\n\nconst stop = state => ({\n  ...state,\n  progression: null,\n  showAnswer: false\n})\n\nconst showAnswer = state => ({ ...state, showAnswer: true })\n\nconst ready = state => state\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.SET_PROG_CONFIG]: setConfig,\n  [Types.PROG_START]: start,\n  [Types.PROG_STOP]: stop,\n  [Types.SHOW_PROG_ANSWER]: showAnswer,\n  [Types.PROG_READY]: ready\n})\n\n/* ------------- Logics ------------- */\n\nconst playbackLogic = createLogic({\n  type: [Types.PROG_START, Types.PROG_REPLAY],\n  latest: true,\n  processOptions: {\n    dispatchReturn: true,\n    successType: Creators.progReady\n  },\n  process: ({ getState }) => {\n    const currentState = getState().progressions\n    playProgression(expandChordProgression(currentState.progression))\n    return\n  }\n})\n\nconst playRootLogic = createLogic({\n  type: [Types.PLAY_ROOT],\n  latest: true,\n  processOptions: {\n    dispatchReturn: true,\n    successType: Creators.progReady\n  },\n  process: ({ getState }) => {\n    const currentState = getState().progressions\n    playNote(currentState.progression.rootNote)\n    return\n  }\n})\n\nexport const Logics = [playbackLogic, playRootLogic]\n","import { createReducer, createActions } from 'reduxsauce'\n\n/* ------------- Initial State ------------- */\n\nconst INITIAL_STATE = {\n  left: '',\n  right: ''\n}\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  openLeft: null,\n  openRight: null,\n  clear: null\n})\n\nexport default Creators\n\n/* ------------- Reducers ------------- */\n\nconst clear = state => INITIAL_STATE\n\nconst openLeft = state => ({\n  right: '',\n  left: 'open'\n})\n\nconst openRight = state => ({\n  left: '',\n  right: 'open'\n})\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.OPEN_LEFT]: openLeft,\n  [Types.OPEN_RIGHT]: openRight,\n  [Types.CLEAR]: clear\n})\n","import { combineReducers, applyMiddleware, createStore, compose } from 'redux'\nimport Reactotron from 'reactotron-react-js'\nimport { createLogicMiddleware } from 'redux-logic'\n\nimport { reducer as intervals, Logics as intervalsLogics } from './Intervals'\nimport {\n  reducer as progressions,\n  Logics as progressionsLogics\n} from './Progressions'\nimport { reducer as panels } from './Panels'\n\nconst logicMiddleware = createLogicMiddleware([\n  ...intervalsLogics,\n  ...progressionsLogics\n])\n\nconst rootReducer = combineReducers({\n  intervals,\n  progressions,\n  panels\n})\n\nconst middlewares = [logicMiddleware]\n\nexport default () => {\n  const store = createStore(\n    rootReducer,\n    compose(applyMiddleware(...middlewares), Reactotron.createEnhancer())\n  )\n  return store\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import styled from 'styled-components'\n\nexport default styled.div`\n  max-height: 100%;\n  min-height: calc(100vh - 80px);\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n`\n","import React, { Component } from 'react'\nimport MainPanel from 'Components/Panels'\nimport styled from 'styled-components'\n\nconst TextContainer = styled.div`\n  width: 90%;\n  flex-grow: 1;\n`\n\nexport default class About extends Component {\n  render = () => (\n    <MainPanel>\n      <TextContainer>\n        <p>\n          Mi nombre es Juan Pablo, soy estudiante de la EMPA y programador de\n          sistemas.\n        </p>\n        <p>\n          Armé este sitio para ayudarme a prepararme para la materia Lenguage\n          Musical, y lo publiqué en caso de que le fuera útil a otros\n          estudiantes o interesados en teoría musical y audiopercepción.\n        </p>\n        <p>\n          Si bien existen muchos sitios y apps que proveen ejercicios similares\n          (y algunos mucho más avanzados) quise hacer el mío porque:\n        </p>\n        <ul>\n          <li>\n            quería ejercicios lo más parecido posibles a los que me toman en la\n            EMPA; y\n          </li>\n          <li>me resultó divertido :-) </li>\n        </ul>\n        <p>\n          Si sos programador y te interesa colaborar con el proyecto (o\n          simplemente chusmear cómo esta hecho) el código fuente está&nbsp;\n          <a href=\"https://github.com/holden-caulfield/empa-trainer\">acá</a>\n        </p>\n        <p>Version: 2.3</p>\n      </TextContainer>\n    </MainPanel>\n  )\n}\n","import chroma from 'chroma-js'\n\nconst getColor = (props, color) => props.theme.colors[color]\n\nexport const soft = color => chroma(color).luminance(0.8)\n\nexport const themeColor = (colorProp, defaultColor) => props =>\n  getColor(props, props[colorProp]) || getColor(props, defaultColor)\n\nexport const themeColorIf = (predicate, colorIfTrue, colorIfFalse) => props =>\n  getColor(props, predicate(props) ? colorIfTrue : colorIfFalse)\n\nexport const themeColorIfProp = (\n  propName,\n  colorIfTrue,\n  colorIfFalse\n) => props => themeColorIf(props => props[propName], colorIfTrue, colorIfFalse)\n","import styled, { css } from 'styled-components'\nimport { soft, themeColor, themeColorIfProp } from 'lib/colors'\nimport React from 'react'\n\nconst makeBox = ({ color }) => `0px 0px 5px ${color}`\n\nconst BaseButton = styled.button.attrs({\n  color: themeColor('color', 'accent')\n})`\n  border: 0;\n  font-family: 'Work Sans';\n  background-color: ${props => props.color};\n  color: ${themeColor('textColor', 'light')};\n  opacity: ${props => (props.disabled ? 0.3 : 1)};\n  &:hover {\n    box-shadow: ${makeBox};\n  }\n  &:disabled {\n    box-shadow: none !important;\n  }\n  &:focus {\n    outline: none;\n  }\n`\n\nconst Button = BaseButton.extend`\n  border-radius: 100px;\n  height: 60px;\n  width: auto;\n  flex-grow: 1;\n  max-width: 300px;\n  font-size: 20px;\n  font-weight: 600;\n  @media (max-width: 720px) {\n    height: 40px;\n    font-size: 16px;\n  }\n`\nexport default Button\n\nconst LightButton = Button.extend`\n  font-weight: 300;\n  border-width: 1px;\n  border-style: solid;\n  border-color: ${themeColor('textColor', 'light')};\n`\n\nexport const SecondaryButton = props => (\n  <LightButton color=\"light\" textColor=\"fade\" {...props} />\n)\n\nconst withCheckable = css`\n  background-color: ${({ selected, color }) =>\n    selected ? color : soft(color)};\n  color: ${themeColorIfProp('selected', 'light', 'disabled')};\n`\n\nexport const CheckableButton = Button.extend`\n  ${withCheckable};\n`\n\nexport const PickerButton = BaseButton.extend`\n  ${withCheckable};\n  width: 70px;\n  height: 70px;\n  border-radius: 15px;\n  font-size: 24px;\n  margin: 10px 10px 0 0;\n  font-weight: 300;\n  @media (max-width: 400px) {\n    height: 60px;\n    width: 60px;\n  }\n`\nexport const ButtonBar = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: center;\n  align-items: flex-end;\n  margin-top: 20px;\n  flex-grow: 1;\n  button {\n    margin: 0 10px;\n  }\n  button:first-child {\n    margin-left: 0;\n  }\n  button:last-child {\n    margin-right: 0;\n  }\n`\n","import React, { Component } from 'react'\nimport { PickerButton } from 'Components/Button'\nimport styled from 'styled-components'\n\nconst ButtonPanel = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n`\n\nexport default class IntervalPicker extends Component {\n  render() {\n    const { value, onSelect, options, disabled } = this.props\n    const isSelected = option => option === value\n    const clickHandler = option => () => {\n      onSelect(option)\n    }\n\n    return (\n      <ButtonPanel>\n        {Object.keys(options).map(key => (\n          <PickerButton\n            color=\"dark\"\n            key={key}\n            disabled={disabled}\n            onClick={clickHandler(options[key])}\n            selected={isSelected(options[key])}\n          >\n            {key}\n          </PickerButton>\n        ))}\n      </ButtonPanel>\n    )\n  }\n}\n","import styled from 'styled-components'\n\nconst CheckableOption = styled.button`\n  border: 0;\n  background-color: transparent;\n  font-size: 30px;\n  padding: 0;\n  color: ${({ selected }) => (selected ? 'black' : 'lightgrey')};\n  @media (max-width: 720px) {\n    font-size: 25px;\n    height: 40px;\n  }\n  @media (max-width: 320px) {\n    font-size: 20px;\n  }\n  :hover {\n    text-shadow: 1px 1px 5px black;\n  }\n  :disabled {\n    text-shadow: none;\n    color: lightgrey;\n  }\n`\n\nexport default CheckableOption\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { note } from '@tonaljs/tonal'\nimport { toItalian } from 'lib/music'\nimport CheckableOption from 'Components/CheckableOption'\n\nconst notes = ['C', 'D', 'E', 'F', 'G', 'A', 'B']\n\nconst NotesSelect = styled.select`\n  font-size: 25px;\n  width: 100px;\n  text-indent: 5px;\n  height: 50px;\n  margin-right: 10px;\n  @media (max-width: 720px) {\n    font-size: 20px;\n    width: 70px;\n    height: 40px;\n  }\n`\n\nexport default class NotePicker extends Component {\n  static defaultProps = {\n    value: 'C4',\n    disabled: false,\n    onChange: () => {}\n  }\n\n  changeNote = change => {\n    const { letter, oct, acc } = { ...note(this.props.value), ...change }\n    this.props.onChange(`${letter}${acc}${oct}`)\n  }\n\n  render = () => {\n    const { disabled, value } = this.props\n    const { acc, letter } = note(value)\n    return (\n      <div>\n        <NotesSelect\n          disabled={disabled}\n          value={letter}\n          onChange={e => this.changeNote({ letter: e.target.value })}\n        >\n          {notes.map((note, index) => (\n            <option value={note} key={note}>\n              {toItalian(note)}\n            </option>\n          ))}\n        </NotesSelect>\n        <CheckableOption\n          disabled={disabled}\n          onClick={() => this.changeNote({ acc: acc === '#' ? '' : '#' })}\n          selected={acc === '#'}\n        >\n          &#9839;\n        </CheckableOption>\n        <CheckableOption\n          disabled={disabled}\n          onClick={() => this.changeNote({ acc: acc === 'b' ? '' : 'b' })}\n          selected={acc === 'b'}\n        >\n          &#9837;\n        </CheckableOption>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { PickerButton } from 'Components/Button'\nimport { intervalOptions } from 'lib/music'\nimport styled from 'styled-components'\nimport { without, identity, sortBy } from 'ramda'\n\nconst ButtonPanel = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  width: 100%;\n  justify-content: space-between;\n`\n\nexport default class IntervalPicker extends Component {\n  render() {\n    const { selected, onSelectRange } = this.props\n    const isSelected = intervalSet => selected.includes(intervalSet)\n    const clickHandler = intervalSet => () => {\n      onSelectRange(\n        isSelected(intervalSet)\n          ? without([intervalSet], selected)\n          : sortBy(identity, [...selected, intervalSet])\n      )\n    }\n\n    return (\n      <ButtonPanel>\n        {intervalOptions.map(intervalSet => (\n          <PickerButton\n            color=\"dark\"\n            key={intervalSet}\n            onClick={clickHandler(intervalSet)}\n            selected={isSelected(intervalSet)}\n          >\n            {intervalSet}\n          </PickerButton>\n        ))}\n      </ButtonPanel>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport IntervalsActions, { allowsNoRepeat, preset } from 'Redux/Intervals'\nimport Button, { ButtonBar, CheckableButton } from 'Components/Button'\nimport MainPanel from 'Components/Panels'\nimport Picker from 'Components/Picker'\nimport NotePicker from 'Components/NotePicker'\nimport IntervalRangePicker from 'Components/IntervalRangePicker'\nimport CheckableOption from 'Components/CheckableOption'\n\nconst SectionContainer = styled.div`\n  width: calc(100% - 40px);\n  padding: 0 20px;\n  margin-bottom: 10px;\n  h2 {\n    font-size: 20px;\n  }\n`\n\nconst SectionControls = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\nconst SectionButton = CheckableButton.extend`\n  margin: 0 20px;\n  max-width: 160px;\n  height: 50px;\n  font-weight: ${props => (props.selected ? 600 : 300)};\n  @media (max-width: 720px) {\n    font-size: 15px;\n    max-width: 130px;\n    height: 40px;\n  }\n`\n\nconst ModeSection = styled.div`\n  padding-top: 10px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  width: 100%;\n`\n\nconst ModeLabel = styled.span`\n  text-transform: capitalize;\n`\n\nconst ConfigSection = props => (\n  <SectionContainer>\n    <h2>{props.title}</h2>\n    <SectionControls>{props.children}</SectionControls>\n  </SectionContainer>\n)\n\nclass IntervalsConfig extends Component {\n  componentWillMount() {\n    this.props.stop()\n  }\n\n  startTest = () => {\n    const { start, history, match } = this.props\n    start()\n    history.push(`${match.url}/test`)\n  }\n\n  render = () => {\n    const {\n      intervalRange,\n      rootNote,\n      randomRootNote,\n      drillLength,\n      repeatIntervals,\n      preset,\n      allowsNoRepeat,\n      setPreset,\n      setConfig\n    } = this.props\n    return (\n      <MainPanel>\n        <ModeSection>\n          {['PABLO', 'PRACTICA'].map(presetOption => (\n            <CheckableOption\n              key={presetOption}\n              selected={preset === presetOption}\n              onClick={() => setPreset(presetOption)}\n            >\n              <ModeLabel>Modo {presetOption.toLowerCase()}</ModeLabel>\n            </CheckableOption>\n          ))}\n        </ModeSection>\n        <ConfigSection title=\"Incluir intervalos de:\">\n          <IntervalRangePicker\n            selected={intervalRange}\n            onSelectRange={intervalRange => setConfig({ intervalRange })}\n          />\n        </ConfigSection>\n        <ConfigSection title=\"Cantidad de intervalos:\">\n          <Picker\n            value={drillLength}\n            options={{ '5': 5, '10': 10, '20': 20, '\\u221E': false }}\n            onSelect={drillLength => setConfig({ drillLength })}\n          />\n        </ConfigSection>\n        <ConfigSection title=\"Repetir intervalos similares:\">\n          <Picker\n            disabled={!allowsNoRepeat}\n            value={allowsNoRepeat ? repeatIntervals : true}\n            options={{ Si: true, No: false }}\n            onSelect={repeatIntervals => setConfig({ repeatIntervals })}\n          />\n        </ConfigSection>\n        <ConfigSection title=\"Intervalos a partir de:\">\n          <NotePicker\n            disabled={randomRootNote}\n            onChange={rootNote => setConfig({ rootNote })}\n            value={rootNote}\n          />\n          <SectionButton\n            color=\"dark\"\n            selected={randomRootNote}\n            onClick={() => setConfig({ randomRootNote: !randomRootNote })}\n          >\n            Aleatorio\n          </SectionButton>\n        </ConfigSection>\n        <ButtonBar>\n          <Button onClick={this.startTest}>Empezar</Button>\n        </ButtonBar>\n      </MainPanel>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state.intervals.config,\n  allowsNoRepeat: allowsNoRepeat(state.intervals),\n  preset: preset(state.intervals)\n})\n\nconst mapDispatchToProps = IntervalsActions\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IntervalsConfig)\n","import React, { Component } from 'react'\nimport { PickerButton } from 'Components/Button'\nimport styled from 'styled-components'\nimport Icon from 'react-fontawesome'\nimport { ivlDirection, ivlQuality } from 'lib/music'\nimport { none, isNil, values } from 'ramda'\n\nconst IntervalPickerContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-content: space-between;\n  width: 100%;\n`\n\nconst IntervalsContainer = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  flex-grow: 3;\n`\n\nconst DirectionContainer = styled.div`\n  display: flex;\n  flex-grow: 1;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst IntervalPickerButton = PickerButton.extend`\n  height: 60px;\n  font-weight: 600;\n  text-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n  font-size: 20px;\n  opacity: ${props => (props.disabled && !props.selected ? 0.5 : 1)};\n  @media (max-width: 400px) {\n    width: 60px;\n  }\n  @media (max-width: 320px) {\n    width: 50px;\n    height: 50px;\n  }\n`\n\nconst directions = [\n  { name: 'ascendente', dir: 1, icon: 'arrow-up' },\n  { name: 'descendente', dir: -1, icon: 'arrow-down' }\n]\n\nconst INITIAL_STATE = { quality: null, dir: null }\n\nexport default class IntervalPicker extends Component {\n  state = INITIAL_STATE\n\n  setQuality = quality => {\n    this.setState({ quality })\n  }\n\n  setDirection = dir => {\n    this.setState({ dir })\n  }\n\n  stateComplete = () => none(isNil, values(this.state))\n\n  componentWillReceiveProps(props) {\n    if (this.props.answer && !props.answer) this.setState(INITIAL_STATE)\n  }\n\n  componentDidUpdate() {\n    const { answer, onIntervalSelected } = this.props\n    if (this.stateComplete() && !answer) {\n      const { dir, quality } = this.state\n      onIntervalSelected(`${dir === -1 ? '-' : ''}${quality}`)\n    }\n  }\n\n  colorFor = fn => value => {\n    const { interval, answer } = this.props\n    if (!answer) return 'dark'\n    if (fn(interval.name) === value) return 'right'\n    if (fn(answer) === value) return 'wrong'\n    return 'dark'\n  }\n\n  render() {\n    const { possibleIntervals, answer } = this.props\n    return (\n      <IntervalPickerContainer>\n        <IntervalsContainer>\n          {possibleIntervals.map(quality => (\n            <IntervalPickerButton\n              color={this.colorFor(ivlQuality)(quality)}\n              key={quality}\n              onClick={() => this.setQuality(quality)}\n              selected={quality === this.state.quality}\n              disabled={answer}\n            >\n              {quality}\n            </IntervalPickerButton>\n          ))}\n        </IntervalsContainer>\n        <DirectionContainer>\n          {directions.map(direction => (\n            <IntervalPickerButton\n              key={direction.name}\n              color={this.colorFor(ivlDirection)(direction.dir)}\n              selected={this.state.dir === direction.dir}\n              onClick={() => this.setDirection(direction.dir)}\n              disabled={answer}\n            >\n              <Icon name={direction.icon} />\n            </IntervalPickerButton>\n          ))}\n        </DirectionContainer>\n      </IntervalPickerContainer>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { toItalian } from 'lib/music'\nimport { Flow as VF } from 'vexflow'\nimport { note as noteProps } from '@tonaljs/tonal'\n\nconst staveNoteFor = note => {\n  const { pc, oct, acc } = noteProps(note)\n  const StaveNote = new VF.StaveNote({\n    clef: 'treble',\n    keys: [`${pc}/${oct}`],\n    duration: 'w'\n  }).addModifier(0, new VF.Annotation(toItalian(note)))\n\n  if (acc !== '') {\n    StaveNote.addAccidental(0, new VF.Accidental(acc))\n  }\n  return StaveNote\n}\n\nexport default class Notes extends Component {\n  drawNote = () => {\n    const context = this.renderer.getContext()\n\n    this.group && context.svg.removeChild(this.group)\n\n    this.group = context.openGroup()\n\n    const notes = this.props.notes.map(staveNoteFor)\n\n    VF.Formatter.FormatAndDraw(context, this.stave, notes)\n\n    context.closeGroup()\n  }\n\n  componentDidMount() {\n    // Create an SVG renderer and attach it to the DIV element named \"boo\".\n    this.renderer = new VF.Renderer(\n      this.refs.container,\n      VF.Renderer.Backends.SVG\n    )\n\n    this.renderer.resize(200, 200)\n\n    // Configure the rendering context.\n    const context = this.renderer.getContext()\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed')\n\n    this.stave = new VF.Stave(10, 44, 180)\n\n    // Add a clef and time signature.\n    this.stave.addClef('treble')\n\n    // Connect it to the rendering context and draw!\n    this.stave.setContext(context).draw()\n    this.drawNote()\n  }\n\n  componentDidUpdate() {\n    this.drawNote()\n  }\n\n  render = () => <div ref=\"container\" />\n}\n","export const imagePath = path => `${process.env.PUBLIC_URL}/images/${path}`\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Notes from 'Components/Notes'\nimport Button from 'Components/Button'\nimport Icon from 'react-fontawesome'\nimport { imagePath } from 'lib/images'\n\nconst IntervalContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  width: calc(100% - 40px);\n  padding: 0;\n  padding-left: 40px;\n  margin: 0;\n  background-color: #f0f3f4;\n  background-image: url(${imagePath('ondas.svg')});\n  background-repeat: repeat-x;\n  background-position: center 177px;\n`\n\nconst ReplayButton = Button.extend`\n  font-size: 14px;\n  height: 30px;\n  max-width: 120px;\n  left: -30px;\n  position: relative;\n`\n\nexport default class Interval extends Component {\n  render() {\n    const { notes, replay } = this.props\n    return (\n      <IntervalContainer>\n        <Notes notes={notes} />\n        <ReplayButton color=\"light\" textColor=\"accent\" onClick={replay}>\n          <Icon name=\"volume-up\" /> &iexcl;De nuevo!\n        </ReplayButton>\n      </IntervalContainer>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport IntervalsActions, {\n  expandSelectedIntervals,\n  drillIsOver\n} from 'Redux/Intervals'\nimport MainPanel from 'Components/Panels'\nimport Button, { SecondaryButton, ButtonBar } from 'Components/Button'\nimport IntervalPicker from 'Components/IntervalPicker'\nimport Interval from 'Components/Interval'\nimport styled from 'styled-components'\n\nconst ControlsContainer = styled.div`\n  width: calc(100% - 40px);\n  padding: 0 20px;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 400px) {\n    width: calc(100% - 20px);\n    padding: 0 10px;\n  }\n`\n\nclass IntervalsTest extends Component {\n  stop = () => {\n    this.props.history.replace('/intervals')\n  }\n  render = () => {\n    const {\n      interval,\n      answer,\n      possibleIntervals,\n      replay,\n      nextInterval,\n      drillIsOver,\n      sendAnswer\n    } = this.props\n    return interval ? (\n      <MainPanel>\n        <Interval\n          notes={\n            answer ? [interval.noteFrom, interval.noteTo] : [interval.noteFrom]\n          }\n          replay={replay}\n        />\n        <ControlsContainer>\n          <IntervalPicker\n            possibleIntervals={possibleIntervals}\n            onIntervalSelected={sendAnswer}\n            interval={interval}\n            answer={answer}\n          />\n          <ButtonBar>\n            <SecondaryButton onClick={this.stop}>Terminar</SecondaryButton>\n            {!drillIsOver && <Button onClick={nextInterval}>Siguiente</Button>}\n          </ButtonBar>\n        </ControlsContainer>\n      </MainPanel>\n    ) : (\n      <Redirect to=\"/intervals\" />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state.intervals,\n  possibleIntervals: expandSelectedIntervals(state.intervals),\n  drillIsOver: drillIsOver(state.intervals)\n})\n\nconst mapDispatchToProps = {\n  nextInterval: IntervalsActions.start,\n  sendAnswer: IntervalsActions.answer,\n  replay: IntervalsActions.replay\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(IntervalsTest)\n","import colors from './colors'\n\nexport default {\n  colors\n}\n","export default {\n  dark: '#212121',\n  light: 'white',\n  accent: '#3d5afe',\n  fade: '#78909c',\n  disabled: '#424242',\n  right: '#00c853',\n  wrong: '#ff1744',\n  average: 'gold'\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { progressStats } from 'Redux/Intervals'\nimport styled from 'styled-components'\nimport chroma from 'chroma-js'\nimport { intervalOptions } from 'lib/music'\nimport T from 'Theme'\n\nconst ProgressContainer = styled.div`\n  min-height: 100%;\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  margin: auto;\n`\n\nconst ProgressSection = styled.section`\n  flex: 1 0 0;\n  width: 100%;\n  font-size: 20px;\n  h2 {\n    font-size: 20px;\n    width: 100%;\n    text-align: center;\n  }\n`\n\nconst OverallProgressSection = styled(ProgressSection)`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 50px;\n`\n\nconst StatsLabel = styled.p`\n  margin: 0;\n  padding: 0;\n`\n\nconst PercentLabel = ({ value }) => {\n  const colorScale = chroma.scale([\n    T.colors.wrong,\n    T.colors.average,\n    T.colors.right\n  ])\n  const StyledLabel = styled.div`\n    font-size: 100px;\n    color: ${colorScale(value)};\n  `\n  return <StyledLabel>{(value * 100).toFixed(0)}%</StyledLabel>\n}\n\nclass IntervalsProgress extends Component {\n  render = () => {\n    const { correct, total, byGroup } = this.props\n    const percentage = correct / total\n    const setsWithStats = intervalOptions.filter(setName =>\n      byGroup.hasOwnProperty(setName)\n    )\n    return total > 0 ? (\n      <ProgressContainer>\n        <OverallProgressSection>\n          <h2>Resultados generales</h2>\n          <PercentLabel value={percentage} />\n          <StatsLabel>\n            {correct}/{total}\n          </StatsLabel>\n        </OverallProgressSection>\n        <ProgressSection>\n          <h2>Por tipo de intervalo</h2>\n          {setsWithStats.map(intervalSet => (\n            <StatsLabel key={intervalSet}>\n              {intervalSet}:{byGroup[intervalSet].correct}/\n              {byGroup[intervalSet].total}\n            </StatsLabel>\n          ))}\n        </ProgressSection>\n      </ProgressContainer>\n    ) : (\n      <ProgressContainer>\n        <p>\n          En esta sección vas a poder ver el análisis de tu progreso cuando\n          arranques tu entrenamiento\n        </p>\n      </ProgressContainer>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...progressStats(state)\n})\n\nexport default connect(mapStateToProps)(IntervalsProgress)\n","import React, { Component } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Config from './Config'\nimport Test from './Test'\nimport IntervalsProgress from './Progress'\n\nexport default class Intervals extends Component {\n  render = () => (\n    <Switch>\n      <Route path=\"/intervals/test\" component={Test} />\n      <Route path=\"/intervals\" component={Config} />\n    </Switch>\n  )\n}\n\nexport class Info extends Component {\n  render = () => <IntervalsProgress />\n}\n","import React from 'react'\nimport { PickerButton } from 'Components/Button'\nimport styled from 'styled-components'\nimport { without } from 'ramda'\n\nconst ButtonPanel = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  width: 100%;\n  justify-content: flex-start;\n`\n\nconst RangePicker = props => {\n  const isSelected = value => props.selected.includes(value)\n\n  const clickHandler = value => () => {\n    props.onSelectRange(\n      isSelected(value)\n        ? without([value], props.selected)\n        : [...props.selected, value]\n    )\n  }\n\n  return (\n    <ButtonPanel>\n      {props.options.map(option => (\n        <PickerButton\n          color=\"dark\"\n          key={option}\n          onClick={clickHandler(option)}\n          selected={isSelected(option)}\n        >\n          {option}\n        </PickerButton>\n      ))}\n    </ButtonPanel>\n  )\n}\n\nexport default RangePicker\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckableButton } from 'Components/Button'\n\nconst SectionContainer = styled.div`\n  width: calc(100% - 40px);\n  padding: 0 20px;\n  margin-bottom: 10px;\n  h2 {\n    font-size: 20px;\n  }\n`\nconst SectionControls = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`\n\nexport const SectionButton = CheckableButton.extend`\n  margin: 0 20px;\n  max-width: 160px;\n  height: 50px;\n  font-weight: ${props => (props.selected ? 600 : 300)};\n  @media (max-width: 720px) {\n    font-size: 15px;\n    max-width: 130px;\n    height: 40px;\n  }\n`\n\nconst ConfigSection = props => (\n  <SectionContainer>\n    <h2>{props.title}</h2>\n    <SectionControls>{props.children}</SectionControls>\n  </SectionContainer>\n)\n\nexport default ConfigSection\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport ProgressionsActions from 'Redux/Progressions'\nimport Button, { ButtonBar } from 'Components/Button'\nimport MainPanel from 'Components/Panels'\nimport RangePicker from 'Components/RangePicker'\nimport NotePicker from 'Components/NotePicker'\nimport ConfigSection, { SectionButton } from 'Components/ConfigSection'\nimport { progressionOptions } from 'lib/music'\n\nconst ProgressionsConfig = props => (\n  <MainPanel>\n    <ConfigSection title=\"Incluir grupos de enlaces:\">\n      <RangePicker\n        selected={props.includedSets}\n        options={progressionOptions}\n        onSelectRange={includedSets => props.setProgConfig({ includedSets })}\n      />\n    </ConfigSection>\n    <ConfigSection title=\"Incluir tipos de Acordes:\">\n      <RangePicker\n        selected={props.includedTypes}\n        options={['Tri', '7ma']}\n        onSelectRange={includedTypes => props.setProgConfig({ includedTypes })}\n      />\n    </ConfigSection>\n    <ConfigSection title=\"Tonalidad:\">\n      <NotePicker\n        disabled={props.randomRootNote}\n        onChange={rootNote => props.setProgConfig({ rootNote })}\n        value={props.rootNote}\n      />\n      <SectionButton\n        color=\"dark\"\n        selected={props.randomRootNote}\n        onClick={() =>\n          props.setProgConfig({ randomRootNote: !props.randomRootNote })\n        }\n      >\n        Aleatorio\n      </SectionButton>\n    </ConfigSection>\n    <ButtonBar>\n      <Button\n        onClick={() => {\n          props.progStart()\n          props.history.push(`${props.match.url}/test`)\n        }}\n      >\n        Empezar\n      </Button>\n    </ButtonBar>\n  </MainPanel>\n)\n\nconst mapStateToProps = state => state.progressions.config\n\nconst mapDispatchToProps = ProgressionsActions\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProgressionsConfig)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport styled from 'styled-components'\n\nimport ProgressionsActions from 'Redux/Progressions'\nimport Button, { SecondaryButton, ButtonBar } from 'Components/Button'\nimport MainPanel from 'Components/Panels'\nimport { Redirect } from 'react-router-dom'\nimport { toItalian } from 'lib/music'\nimport Icon from 'react-fontawesome'\n\nconst ControlsContainer = styled.div`\n  width: calc(100% - 40px);\n  padding: 0 20px;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 400px) {\n    width: calc(100% - 20px);\n    padding: 0 10px;\n  }\n`\n\nconst Answer = styled.h1`\n  height: 50px;\n  font-size: 40px;\n  padding: 10px;\n`\n\nconst ProgressionsTest = props =>\n  props.progression ? (\n    <MainPanel>\n      <div>\n        <h1>Tonalidad: {toItalian(props.progression.rootNote)}</h1>\n        <ButtonBar>\n          <Button onClick={props.replay}>\n            <Icon name=\"volume-up\" /> De nuevo!\n          </Button>\n          <Button onClick={props.playRoot}>\n            <Icon name=\"volume-up\" /> Dame la tónica!\n          </Button>\n        </ButtonBar>\n      </div>\n      <ButtonBar>\n        <Button onClick={props.requestAnswer}>Mostrar Respuesta</Button>\n      </ButtonBar>\n      <Answer>{props.showAnswer && props.progression.chords}</Answer>\n      <ControlsContainer>\n        <ButtonBar>\n          <SecondaryButton onClick={props.stop}>Terminar</SecondaryButton>\n          <Button onClick={props.nextProgression}>Siguiente</Button>\n        </ButtonBar>\n      </ControlsContainer>\n    </MainPanel>\n  ) : (\n    <Redirect to=\"/progressions\" />\n  )\n\nconst mapStateToProps = state => state.progressions\n\nconst mapDispatchToProps = {\n  nextProgression: ProgressionsActions.progStart,\n  requestAnswer: ProgressionsActions.showProgAnswer,\n  replay: ProgressionsActions.progReplay,\n  playRoot: ProgressionsActions.playRoot,\n  stop: ProgressionsActions.progStop\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProgressionsTest)\n","import About from './About'\nimport Intervals, { Info as IntervalsInfo } from './Intervals'\nimport Progressions from './Progressions'\n\nexport default [\n  {\n    name: 'intervals',\n    route: '/intervals',\n    component: Intervals,\n    props: {\n      title: 'Intervalos',\n      infoSection: IntervalsInfo,\n      infoIcon: 'area-chart'\n    }\n  },\n  {\n    name: 'progressions',\n    route: '/progressions',\n    component: Progressions,\n    props: {\n      title: 'Enlaces'\n    }\n  },\n  {\n    name: 'about',\n    route: '/about',\n    component: About,\n    props: {\n      title: 'Acerca de EMPATrainer'\n    }\n  }\n]\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Config from './Config'\nimport Test from './Test'\n\nconst Progressions = () => (\n  <Switch>\n    <Route path=\"/progressions/test\" component={Test} />\n    <Route path=\"/progressions\" component={Config} />\n  </Switch>\n)\n\nexport default Progressions\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Pages from 'Pages'\nimport { imagePath } from 'lib/images'\n\nconst NavContainer = styled.nav`\n  display: flex;\n  flex-direction: column;\n`\n\nconst NavHeader = styled.header`\n  height: 60px;\n  font-size: 24px;\n  padding-left: 10px;\n  border-bottom: 1px solid black;\n`\n\nconst Logo = styled.img`\n  height: 26px;\n  padding: 17px 5px;\n`\n\nconst NavItem = styled(NavLink)`\n  height: 40px;\n  line-height: 40px;\n  text-decoration: none;\n  color: ${props => props.theme.colors.dark};\n  font-size: 16px;\n  font-weight: 600;\n  padding-left: 10px;\n  box-shadow: inset 0 -1px 0 0 #eceff1;\n  &.selected {\n    color: white;\n    background-color: ${props => props.theme.colors.accent};\n  }\n`\n\nexport default class Menu extends Component {\n  render = () => (\n    <NavContainer>\n      <NavHeader>\n        <Logo src={imagePath('logo.svg')} alt=\"\" />\n      </NavHeader>\n      {Pages.map(page => (\n        <NavItem key={page.name} to={page.route} activeClassName=\"selected\">\n          {page.props.title}\n        </NavItem>\n      ))}\n    </NavContainer>\n  )\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport Icon from 'react-fontawesome'\n\nconst NavBarContainer = styled.header`\n  display: flex;\n  left: 320px;\n  right: 320px;\n  top: 0;\n  position: fixed;\n  height: 60px;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.theme.colors.light};\n  border-bottom: 1px solid black;\n  border-left: 1px solid black;\n  border-right: 1px solid black;\n  @media (max-width: 720px) {\n    right: 0;\n    border-right: 0;\n  }\n  @media (max-width: 1040px) {\n    left: 0;\n    border-left: 0;\n  }\n`\n\nconst TitleContainer = styled.h1`\n  flex-grow: 1;\n  font-size: 25px;\n  font-weight: bold;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  span {\n    padding: 0 10px;\n  }\n`\n\nconst Filler = styled.span`\n  height: 60px;\n  width: 60px;\n`\n\nconst MenuIcon = styled(Icon)`\n  font-size: 30px;\n  height: 60px;\n  width: 60px;\n  line-height: 60px;\n  text-align: center;\n  visibility: hidden;\n`\n\nconst LeftIcon = MenuIcon.extend`\n  @media (max-width: 1040px) {\n    visibility: visible;\n  }\n`\nconst RightIcon = MenuIcon.extend`\n  @media (max-width: 720px) {\n    visibility: visible;\n  }\n`\n\nexport default class NavBar extends Component {\n  render() {\n    const { onLeftIcon, onRightIcon, rightIcon, title } = this.props\n    return (\n      <NavBarContainer>\n        <LeftIcon className=\"left\" name=\"bars\" onClick={onLeftIcon} />\n        <TitleContainer>\n          <span>{title}</span>\n        </TitleContainer>\n        {rightIcon ? (\n          <RightIcon name={rightIcon} onClick={onRightIcon} />\n        ) : (\n          <Filler />\n        )}\n      </NavBarContainer>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PanelsActions from 'Redux/Panels'\nimport NavMenu from './NavMenu'\nimport NavBar from './NavBar'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { imagePath } from 'lib/images'\n\nconst Filler = styled.div`\n  flex-grow: 1;\n  background-image: url(${imagePath('ondas-dark.svg')});\n  background-repeat: repeat-x;\n  background-position: center bottom;\n  opacity: 0.1;\n  margin-bottom: 20px;\n`\n\nclass MainLayout extends Component {\n  static defaultProps = {\n    infoSection: () => null,\n    infoIcon: null\n  }\n  render = () => (\n    <div id=\"mainContainer\" role=\"main\">\n      <aside\n        id=\"leftPanel\"\n        onClick={this.props.clear}\n        className={this.props.left}\n      >\n        <NavMenu />\n        <Filler />\n      </aside>\n      <main id=\"mainPanel\">\n        <NavBar\n          title={this.props.title}\n          onLeftIcon={this.props.openLeft}\n          rightIcon={this.props.infoIcon}\n          onRightIcon={this.props.infoIcon ? this.props.openRight : false}\n        />\n        <section id=\"container\">{<this.props.mainContent />}</section>\n      </main>\n      <aside\n        id=\"rightPanel\"\n        onClick={this.props.clear}\n        className={this.props.right}\n      >\n        <this.props.infoSection />\n      </aside>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => state.panels\n\nexport default withRouter(connect(mapStateToProps, PanelsActions)(MainLayout))\n","import React, { Component } from 'react'\nimport Pages from 'Pages'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from 'react-router-dom'\nimport MainLayout from 'Layouts/MainLayout'\n\nconst renderPage = page => () => {\n  const { component, props } = page\n  return <MainLayout mainContent={component} {...props} />\n}\n\nexport default class App extends Component {\n  render = () => {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          {Pages.map(page => (\n            <Route\n              key={page.name}\n              path={page.route}\n              render={renderPage(page)}\n            />\n          ))}\n          <Route\n            key=\"root\"\n            exact\n            path=\"/\"\n            render={() => <Redirect to={Pages[0].route} />}\n          />\n        </Switch>\n      </Router>\n    )\n  }\n}\n","import Reactotron from 'reactotron-react-js'\nimport { reactotronRedux } from 'reactotron-redux'\n\nReactotron.configure()\n  .use(reactotronRedux())\n  .connect()\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport createStore from './Redux'\nimport registerServiceWorker from './registerServiceWorker'\nimport App from './App'\nimport './index.css'\nimport 'Config/Reactotron'\n\nimport theme from 'Theme'\nimport { ThemeProvider } from 'styled-components'\n\nconst store = createStore()\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n\nregisterServiceWorker()\n"],"sourceRoot":""}